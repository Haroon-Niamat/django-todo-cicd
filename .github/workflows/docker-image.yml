# name: Docker Image CI
# on:
#   workflow_dispatch:
#   push:
#    tags:
#     - 'v*'

# jobs:
#   push_to_registry_of_student:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-20.04
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
      
#       - name: Log in to Docker Hub
#         uses: docker/login-action@
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: haroonniamat029/django-app
#           tags: |
#             type=semver,pattern={{version}}
      
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
      
#       - name: Build & Deploy
#         env:
#             PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#             HOSTNAME: ${{ secrets.EC2_PUBLIC_IP }}
#             USER_NAME: ${{ secrets.USER_NAME }}
      
#         run: |
#           echo "$PRIVATE_KEY " > private_key && chmod 600 private_key
#           ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
#               # Now we have got the access of EC2 and we will start the deploy .
#               docker-compose pull && docker-compose up -d '




name: CI/CD.

on:
  push:
    branches:
      - dev

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
     

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Run Script on the Server
      uses: appleboy/ssh-action@v1.0.2      
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}  
        script: |
            docker-compose up -d

